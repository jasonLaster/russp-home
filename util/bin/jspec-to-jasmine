#!/usr/bin/python
from sys import argv
import re

filename = argv[1]

file = open(filename, 'r')
modified = []
for line in file:
    whitespace = re.search('^\s*', line).group(0)
    line = line.strip()
    if line.startswith('it '):
        line = line.replace("it ", "it(")
        line += ", function() {"

    if line == 'end':
        line = "});"

    if line.find('describe ') >= 0:
        line = line.replace('describe ', 'describe(')
        line += ", function() {"

    if line.find('before_each') >= 0:
        line = line.replace('before_each', 'beforeEach(function() {')

    if line.find('after_each') >= 0:
        line = line.replace('after_each', 'afterEach(function() {')

    if line.find('.should.') >= 0:
        line = 'expect('+line

    # should.be -> .toEqual(
    if line.find('.should.be ') >= 0:
        line = line.replace('.should.be ', ').toEqual(')
        line += ');'

    # should.be_an_instance_of -> instanceof ___
    if line.find('.should.be_an_instance_of ') >= 0:
        line = line.replace('.should.be_an_instance_of ',
            ' instanceof ')
        line += ').toBeTruthy();'

    if line.find('.should.not.equal ') >= 0:
        line = line.replace('.should.not.equal ',
            ').not.toEqual(')
        line += ');'

    if line.find('.should.have_property ') >= 0:
        line = line.replace('.should.have_property \'', '.')
        line = line.replace("'", '')
        line = line+').toBeDefined()'

    if line.find('.should.respond_to ') >= 0:
        line = line.replace('.should.respond_to \'', '.')
        line = line.replace("'", '')
        line = line+' instanceof Function).toBeTruthy();'

    if not line == '':
        line = whitespace + line

    modified.append(line)

newfile = filename.replace('spec', 'test')

contents = "\n".join(modified)
newfile = open(newfile, 'w')
newfile.write(contents)
newfile.close()

